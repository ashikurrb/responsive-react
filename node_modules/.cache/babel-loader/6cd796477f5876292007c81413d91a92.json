{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport initializeAuthentication from \"../Pages/L\";\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [users, setUsers] = useState({});\n  const auth = getAuth();\n\n  const signInUsingGoogle = () => {\n    const googleProvider = new GoogleAuthProvider();\n    signInWithPopup(auth, googleProvider).then(result => {\n      setUsers(result.user);\n    });\n  };\n\n  useEffect(() => {\n    const unsubscribed = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUsers(user);\n      } else {\n        setUsers({});\n      }\n    });\n    return () => unsubscribed();\n  }, []);\n\n  const logOut = () => {\n    signOut(auth).then(() => {});\n  };\n\n  return {\n    user: users,\n    signInUsingGoogle,\n    logOut\n  };\n};\n\n_s(useFirebase, \"CmIt4qun+OF0D6dFvzbfHAE/vGg=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["G:/Programing Hero/responsive-react-mediaquaries/src/hooks/useFirebase.js"],"names":["getAuth","signInWithPopup","GoogleAuthProvider","signOut","onAuthStateChanged","useEffect","useState","initializeAuthentication","useFirebase","users","setUsers","auth","signInUsingGoogle","googleProvider","then","result","user","unsubscribed","logOut"],"mappings":";;AAAA,SACEA,OADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,OAJF,EAKEC,kBALF,QAMO,eANP;AAOA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,wBAAP,MAAqC,YAArC;AAEAA,wBAAwB;;AAExB,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMK,IAAI,GAAGX,OAAO,EAApB;;AAEA,QAAMY,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,cAAc,GAAG,IAAIX,kBAAJ,EAAvB;AACAD,IAAAA,eAAe,CAACU,IAAD,EAAOE,cAAP,CAAf,CAAsCC,IAAtC,CAA4CC,MAAD,IAAY;AACrDL,MAAAA,QAAQ,CAACK,MAAM,CAACC,IAAR,CAAR;AACD,KAFD;AAGD,GALD;;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,YAAY,GAAGb,kBAAkB,CAACO,IAAD,EAAQK,IAAD,IAAU;AACtD,UAAIA,IAAJ,EAAU;AACRN,QAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,OAFD,MAEO;AACLN,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,KANsC,CAAvC;AAOA,WAAO,MAAMO,YAAY,EAAzB;AACD,GATQ,EASN,EATM,CAAT;;AAWA,QAAMC,MAAM,GAAG,MAAM;AACnBf,IAAAA,OAAO,CAACQ,IAAD,CAAP,CAAcG,IAAd,CAAmB,MAAM,CAAE,CAA3B;AACD,GAFD;;AAIA,SAAO;AAAEE,IAAAA,IAAI,EAAEP,KAAR;AAAeG,IAAAA,iBAAf;AAAkCM,IAAAA;AAAlC,GAAP;AACD,CA3BD;;GAAMV,W;;AA6BN,eAAeA,WAAf","sourcesContent":["import {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport initializeAuthentication from \"../Pages/L\";\r\n\r\ninitializeAuthentication();\r\n\r\nconst useFirebase = () => {\r\n  const [users, setUsers] = useState({});\r\n  const auth = getAuth();\r\n\r\n  const signInUsingGoogle = () => {\r\n    const googleProvider = new GoogleAuthProvider();\r\n    signInWithPopup(auth, googleProvider).then((result) => {\r\n      setUsers(result.user);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribed = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUsers(user);\r\n      } else {\r\n        setUsers({});\r\n      }\r\n    });\r\n    return () => unsubscribed();\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    signOut(auth).then(() => {});\r\n  };\r\n\r\n  return { user: users, signInUsingGoogle, logOut };\r\n};\r\n\r\nexport default useFirebase;\r\n"]},"metadata":{},"sourceType":"module"}